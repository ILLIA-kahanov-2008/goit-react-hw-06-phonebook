{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","redux/phoneBook/phoneBook-types.js","redux/phoneBook/phoneBook-actions.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","redux/phoneBook/phoneBook-reducer.js","redux/store.js","index.js"],"names":["module","exports","name","number","type","types","payload","id","shortid","value","connect","dispatch","addContact","contactName","contactNumber","phoneBookActions","useState","setName","setNumber","handleChange","e","target","className","styles","form","onSubmit","preventDefault","pattern","title","required","onChange","placeholder","Styles","styled","div","getFilteredContacts","allContacts","filter","normalizeFilter","toLowerCase","includes","contacts","items","filteredContacts","cbRemoveContact","handleClick","map","style","textTransform","onClick","filterInputValue","filterInputOnChange","App","combineReducers","state","isExists","some","contact","alert","rootReducer","phoneBookReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b17485a3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3_gtc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3B7bj\"};","// eslint-disable-next-line\r\nexport default {\r\n  ADD_CONTACT: 'contacts/add',\r\n  REMOVE_CONTACT: 'contacts/remove',\r\n  FILTER_CHANGE: 'contacts/changeFilter'\r\n}\r\n\r\n\r\n","import types from './phoneBook-types';\r\nimport shortid from 'shortid';\r\n\r\nconst addNewContact = (name, number) => ({\r\n  type: types.ADD_CONTACT,\r\n  payload: {\r\n    id: shortid(),\r\n    name,\r\n    number,\r\n  },\r\n});\r\n\r\nconst removeContact = (id) => ({  \r\n  type: types.REMOVE_CONTACT,\r\n  payload: {\r\n    id,\r\n  },\r\n})\r\n\r\nconst filteringValue = (value) => ({\r\n  type: types.FILTER_CHANGE,\r\n  payload: value\r\n  \r\n})\r\n\r\n// eslint-disable-next-line\r\nexport default { addNewContact, removeContact, filteringValue };\r\n","import { useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import shortid from \"shortid\";\r\nimport { connect } from \"react-redux\";\r\nimport phoneBookActions from '../../redux/phoneBook/phoneBook-actions'\r\n\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nfunction ContactForm ({addContact}) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value)\r\n        break;\r\n    case \"number\":\r\n        setNumber(value)\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // const newContact = {\r\n    //   id: shortid(),\r\n    //   name,\r\n    //   number,      \r\n    // };\r\n    setName('');\r\n    setNumber('');\r\n    addContact(name, number);\r\n  };\r\n\r\n    return (\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <label>\r\n          <p>Name</p>\r\n          <input\r\n            className=\"input\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={handleChange}\r\n            placeholder=\"Enter new contact name\"\r\n          />\r\n        </label>\r\n        <label>\r\n          <p>Number</p>\r\n          <input\r\n            className=\"input\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={handleChange}\r\n            placeholder=\"Enter new contact number\"\r\n          />\r\n        </label>\r\n        <button className=\"button\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addContact: (contactName, contactNumber) =>\r\n    dispatch(phoneBookActions.addNewContact(contactName, contactNumber))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n\r\nContactForm.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\n\r\n","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport phoneBookActions from '../../redux/phoneBook/phoneBook-actions';\r\nimport styled from 'styled-components';\r\n\r\nconst Styles = styled.div`\r\n  .selector1 {\r\n    width: 95%;\r\n    border-collapse: collapse;\r\n    margin: 20px auto;\r\n  }\r\n  .selector2 {\r\n    background-color: rgb(63, 207, 243);\r\n    text-transform: uppercase;\r\n    color: #fff;\r\n  }\r\n  .selector3 {\r\n    line-height: 2;\r\n    border: 1px solid burlywood;\r\n    text-align: center;\r\n  }\r\n`;\r\nfunction ContactList({ cbRemoveContact, filteredContacts }) {\r\n  const handleClick = e => cbRemoveContact(e.target.id);\r\n  return (\r\n    <Styles>\r\n      <table className=\"selector1\">\r\n        <thead className=\"selector2\">\r\n          <tr>\r\n            <th className=\"selector3\">Name</th>\r\n            <th className=\"selector3\">Phone Number</th>\r\n            <th className=\"selector3\">Etc.</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filteredContacts.map(({ id, name, number }) => (\r\n            <tr key={id}>\r\n              <td className=\"selector3\" style={{ textTransform: 'capitalize' }}>\r\n                {name}\r\n              </td>\r\n              <td className=\"selector3\">{number}</td>\r\n              <td className=\"selector3\">\r\n                <button\r\n                  className=\"button\"\r\n                  type=\"button\"\r\n                  onClick={handleClick}\r\n                  id={id}\r\n                >\r\n                  Delete contact\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </Styles>\r\n  );\r\n}\r\n\r\nconst getFilteredContacts = (allContacts, filter) => {\r\n  const normalizeFilter = filter.toLowerCase();\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizeFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  filteredContacts: getFilteredContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  cbRemoveContact: id => dispatch(phoneBookActions.removeContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  cbRemoveContact: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport phoneBookActions from \"../../redux/phoneBook/phoneBook-actions\";\r\n\r\nimport styles from \"./Filter.module.css\";\r\n\r\nFilter.propTypes = {\r\n  filterInputValue: PropTypes.string,\r\n  filterInputOnChange: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction Filter({ filterInputValue, filterInputOnChange }) {\r\n  return (\r\n    <label className={styles.filter}>\r\n      <p className=\"label\">Find contacts by name</p>\r\n      <input\r\n        className=\"input\"\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filterInputValue}\r\n        onChange={filterInputOnChange}\r\n        placeholder=\"Enter query name\"\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({contacts:{filter}}) => ({\r\n  filterInputValue: filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  filterInputOnChange: (e) => dispatch(phoneBookActions.filteringValue(e.target.value))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","// import { useState, useMemo } from \"react\";\r\n// import { useLS } from '../../hooks/useLS';\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport ContactList from \"../ContactList/ContactList\";\r\nimport Filter from \"../Filter/Filter\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  // const [contacts, setContacts] = useLS('allContacts', []);\r\n  // const [filter, setFilter] = useState('');\r\n\r\n  // const handleChange = (e) => {\r\n  //   const { name, value } = e.target;\r\n  //   name === \"filter\" && setFilter(value);\r\n  // };\r\n\r\n  // const addNewContact = (newContact) => {\r\n  //   const isExists = contacts.some(\r\n  //     (contact) => contact.name.toLowerCase() === newContact.name.toLowerCase()\r\n  //   );\r\n  //   isExists\r\n  //     ? alert(`${newContact.name} is already in contacts`)\r\n  //     : setContacts((prev) => [...prev, newContact]);\r\n  // };\r\n\r\n  // const removeContact = (id) => setContacts(contacts.filter((contact) => contact.id !== id));\r\n\r\n  // const filteredContacts = useMemo(() => {\r\n  //   return contacts.filter(({ name }) =>\r\n  //     name.toLowerCase().includes(filter.toLowerCase())\r\n  //   );\r\n  // },[contacts, filter])\r\n\r\n    \r\n    return (\r\n      <div className=\"App\">\r\n        <h1>PhoneBook</h1>\r\n        <ContactForm\r\n          // cbAddNewContact={addNewContact}\r\n        />\r\n        <h2>Contacts</h2>\r\n        <div className=\"Contacts\">\r\n          <Filter\r\n            // filteringName={filter}\r\n            // cbInputChange={handleChange}\r\n          />\r\n          <ContactList\r\n            // filteredContacts={filteredContacts}\r\n            // cbRemoveContact={removeContact}\r\n          />\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport types from './phoneBook-types';\r\n\r\n// const initialState = {\r\n//   contacts: {\r\n//     items: [],\r\n//     filter: '',\r\n//   },\r\n// };\r\n\r\nconst items = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD_CONTACT:\r\n      const isExists = state.some(\r\n        (contact) => contact.name.toLowerCase() === payload.name.toLowerCase()\r\n      )\r\n      return isExists ? alert(`${payload.name} is already in contacts`)\r\n        : [...state, payload];\r\n    case types.REMOVE_CONTACT:\r\n      return state.filter(({id}) => id !== payload.id);\r\n    default:\r\n      return state;\r\n  }  \r\n}\r\n\r\nconst filter = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case types.FILTER_CHANGE:\r\n      return payload;\r\n    default:\r\n      return state\r\n  }\r\n \r\n  \r\n}\r\n\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.CHANGE_FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n","import { createStore, combineReducers} from 'redux'; //\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport phoneBookReducer from './phoneBook/phoneBook-reducer';\r\n\r\n\r\n// const store = createStore(phoneBookReducer, composeWithDevTools());\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: phoneBookReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from 'react-redux';\r\nimport App from \"./components/App/App.jsx\";\r\nimport store from './redux/store';\r\n\r\nimport \"./index.css\";\r\n\r\n// console.log('store :>> ', store.getState());\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}